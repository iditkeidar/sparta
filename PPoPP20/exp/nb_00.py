
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/00_graphs.ipynb

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import re

#-----------------------------
marksize=20
my_linewidth = 5
# These are the "Tableau 20" colors as RGB.
tableau20 = [(135,206,250), (221,160,221), (255, 140, 0), (255, 230, 0),
             (46, 139, 87), (152, 223, 138), (214, 39, 138), (178,34,34),
             (147, 112, 219), (128,128,128), (220, 220, 220), (30,144,255),
             (227, 119, 194), (247, 182, 210), (127, 127, 127), (199, 199, 199),
             (188, 189, 34), (219, 219, 141), (23, 190, 207), (158, 218, 229)]
# 1 - blue
# 5 - green
# 6 - pink
for i in range(len(tableau20)):
    r, g, b = tableau20[i]
    tableau20[i] = (r / 255., g / 255., b / 255.)

throughputs = [32.55, 63.97, 84.37, 108.56, 162.35, 204.09, 254.77, 272.08, 278.05,477.94]
myfonsize = 25
#-----------------------------


def draw_chart_2(x_axis, y1, y1_name, y2, y2_name, x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='s', color=tableau20[5],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='h', linestyle='-', color=tableau20[8], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)


    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    #plt.xticks(x_axis)
    if len(x_axis) > 5 :
        plt.xticks(fontsize=myfonsize)
    else :
        plt.xticks(x_axis, fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()


def draw_chart_3(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    if pdf_name == "CumulativeDocInserts" :
        ax.annotate('end of sequential phase', xy=(150, 90), xytext=(220, 80), fontsize=20,
                arrowprops=dict(facecolor='black', width=0.03),
                )
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    #plt.xticks(x_axis)
    if len(x_axis) > 5 :
        plt.xticks(fontsize=myfonsize)
    else :
        plt.xticks(x_axis, fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_4(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks( fontsize=myfonsize )
    #plt.title("Transaction Size " + txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_4_table(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, xmin, ymin, xlim, ylim,
                 yscale, legend_loc, read_chance, range, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    #plt.xlabel(x_name, fontsize=myfonsize)
    #plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks([1, 2, 3, 4, 5, 6, 7], [1, 2, 4, 8, 16, 32, 64], fontsize=myfonsize)
    plt.title("Range: " + range + ", " + read_chance + "% retrieves", fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_5(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, y5, y5_name, x_name, y_name, xmin, ymin, xlim, ylim,
                 yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='s', color=tableau20[3],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='^', linestyle='-', color=tableau20[6], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='o', linestyle='-', color=tableau20[0],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y5, label=y5_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)


    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_5_new(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, y5, y5_name, x_name, y_name, xmin, ymin, xlim, ylim,
                 yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y5, label=y5_name, marker='p', linestyle='-', color=tableau20[2],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)


    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_6_new(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, y5, y5_name, y6, y6_name, x_name, y_name, xmin, ymin, xlim, ylim,
                 yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y5, label=y5_name, marker='p', linestyle='-', color=tableau20[2],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y6, label=y6_name, marker='v', linestyle='-', color=tableau20[10],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)


    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_6(x_axis, y1, y1_name, y2, y2_name, y3, y3_name, y4, y4_name, y5, y5_name, y6, y6_name, x_name, y_name, xmin, ymin, xlim, ylim,
                 yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker='^', color=tableau20[6],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker='o', linestyle='-', color=tableau20[0], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker='s', linestyle='-', color=tableau20[5],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker='p', linestyle='-', color=tableau20[2],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y5, label=y5_name, marker='v', linestyle='-', color=tableau20[7],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y6, label=y6_name, marker='h', linestyle='-', color=tableau20[8],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_6_new_new(x_axis,
                         y1, y1_name, y1_marker, y1_color,
                         y2, y2_name, y2_marker, y2_color,
                         y3, y3_name, y3_marker, y3_color,
                         y4, y4_name, y4_marker, y4_color,
                         y5, y5_name, y5_marker, y5_color,
                         y6, y6_name, y6_marker, y6_color,
                         x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker=y1_marker, color=tableau20[y1_color],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)


    plt.plot(x_axis, y2, marker=y2_marker, linestyle='-', color=tableau20[y2_color], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker=y3_marker, linestyle='-', color=tableau20[y3_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker=y4_marker, linestyle='-', color=tableau20[y4_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y5, label=y5_name, marker=y5_marker, linestyle='-', color=tableau20[y5_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y6, label=y6_name, marker=y6_marker, linestyle='-', color=tableau20[y6_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_5_new_new(x_axis,
                         y1, y1_name, y1_marker, y1_color,
                         y2, y2_name, y2_marker, y2_color,
                         y3, y3_name, y3_marker, y3_color,
                         y4, y4_name, y4_marker, y4_color,
                         y5, y5_name, y5_marker, y5_color,
                         x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y5, label=y5_name, marker=y5_marker, linestyle='-', color=tableau20[y5_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker=y1_marker, color=tableau20[y1_color],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker=y2_marker, linestyle='-', color=tableau20[y2_color], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker=y3_marker, linestyle='-', color=tableau20[y3_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker=y4_marker, linestyle='-', color=tableau20[y4_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)


    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_4_new_new(x_axis,
                         y1, y1_name, y1_marker, y1_color,
                         y2, y2_name, y2_marker, y2_color,
                         y3, y3_name, y3_marker, y3_color,
                         y4, y4_name, y4_marker, y4_color,
                         x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker=y1_marker, color=tableau20[y1_color],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker=y2_marker, linestyle='-', color=tableau20[y2_color], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker=y3_marker, linestyle='-', color=tableau20[y3_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y4, label=y4_name, marker=y4_marker, linestyle='-', color=tableau20[y4_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

def draw_chart_3_new_new(x_axis,
                         y1, y1_name, y1_marker, y1_color,
                         y2, y2_name, y2_marker, y2_color,
                         y3, y3_name, y3_marker, y3_color,
                         x_name, y_name, xmin, ymin, xlim, ylim, yscale, legend_loc, pdf_name):
    plt.figure(figsize=(10, 7))
    ax = plt.subplot(1, 1, 1)

    plt.plot(x_axis, y1, linestyle='-', label=y1_name, marker=y1_marker, color=tableau20[y1_color],
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y2, marker=y2_marker, linestyle='-', color=tableau20[y2_color], label=y2_name,
             linewidth=my_linewidth, markersize=marksize, markeredgewidth=2)

    plt.plot(x_axis, y3, label=y3_name, marker=y3_marker, linestyle='-', color=tableau20[y3_color],
             linewidth=my_linewidth,
             markersize=marksize, markeredgewidth=2)

    plt.yscale(yscale)
    plt.xlim((xmin, xlim))
    plt.ylim(ymin, ylim)
    plt.grid(True)
    # plt.legend(loc=0)

    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xlabel(x_name, fontsize=myfonsize)
    plt.ylabel(y_name, fontsize=myfonsize)
    plt.yticks(fontsize=myfonsize)
    plt.xticks(fontsize=myfonsize)
    # plt.title("Transaction Size "+ txsize[pltnum],fontsize=myfonsize)
    plt.tight_layout()

    plt.legend(loc=legend_loc, fontsize=myfonsize)
    plt.savefig(pdf_name + ".pdf", bbox_inches='tight')
    plt.show()

